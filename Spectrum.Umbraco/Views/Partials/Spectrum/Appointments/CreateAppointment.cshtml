@using Spectrum.Content.Appointments
@using Spectrum.Content.Appointments.Controllers
@model Spectrum.Content.Appointments.ViewModels.CreateAppointmentViewModel
@{
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);

    if (Model.Duration == 0)
    {
        int duration = 60;

        if (Request.Cookies[AppointmentConstants.LastAppointmentDuration] != null)
        {
            duration = Convert.ToInt32(Request.Cookies[AppointmentConstants.LastAppointmentDuration].Value);
        }

        Model.Duration = duration;
    }
}

@using (Html.BeginUmbracoForm<AppointmentsController>("InsertAppointment"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="center-content">
        <div class="row">
            <div class="col-sm-6 col-md-4 col-md-offset-4">
                <div class="account-wall">
                    
                    <h2 class="partial-title">@Html.Action("ClientName", "Client")</h2>

                    <h2 class="partial-title">Create an Appointment</h2>

                    <label class="control-label">Appointment Date *</label>
                    <div class="calendar-position form-group">

                        @Html.TextBoxFor(model => model.StartTime, "{0:dd-MMM-yyyy HH:mm}", new { @class = "date form-control" })
                        <span class="btn" style="cursor: pointer;">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>

                    <label class="control-label">Duration in minutes *</label>
                    @Html.ValidationMessageFor(model => model.StartTime)

                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Duration)

                    <label class="control-label">Location</label>
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location)

                    <label class="control-label">Description *</label>
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "5" })
                    @Html.ValidationMessageFor(model => model.Description)
                    
                    @Html.HiddenFor(model => model.ClientId)

                    @Html.Partial("Spectrum/Components/Required")

                    <button value="submit" id="submit" class="btn btn-lg btn-primary btn-block">Save Appointment</button>

                </div>
            </div>
        </div>
    </div>


    <script>

        $(document).ready(function () {

            $('.input-validation-error').parents('.form-group').addClass('has-error');
            $('.field-validation-error').addClass('text-danger');

            initialiseDatePicker();

            $('.btn').click(function () {
                $(".date", $(this).closest(".form-group")).focus();
            });

            $('form').submit(function (event) {
                $('#submit').prop('disabled', true);
            });
        });

    </script>
}