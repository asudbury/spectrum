<table id="transactionsGrid" class="table table-condensed table-hover table-striped">
    <thead>
        <tr>
            <th data-column-id="id" data-header-align="center" data-align="center">Id</th>
            <th data-column-id="transactionDateTime" data-formatter="dateTime" data-header-align="center" data-align="center">Date</th>
            <th data-column-id="status" data-header-align="center" data-align="center">Status</th>
            <th data-column-id="paymentInformation" data-formatter="paymentInformation" data-header-align="center" data-align="center">Payment Information</th>
            <th data-column-id="amount" data-formatter="amount" data-header-align="center" data-align="center">Amount</th>
            <th data-column-id="actions" data-header-align="center" data-align="center" data-formatter="actions">Commands</th>
        </tr>
    </thead>
</table>

<script>

    var transactionsGrid = $("#transactionsGrid").bootgrid({
        labels: {
            noResults: "No transactions found"
        },
        searchSettings: {
            delay: 100,
            characters: 1
        },
        templates: {
            header: "<div id=\"{{ctx.id}}\" class=\"{{css.header}}\">" +
                "<div class=\"row\">" +
                "<h2 class=\"partial-title\">Payments</h2>" +
                "</div>" +
                "<div class=\"row\">" +
                "<div class=\"col-sm-12 actionBar\">" +
                "<p class=\"{{css.search}}\"></p>" +
                "<p class=\"{{css.actions}}\">" +
                "</p>" +
                "</div>" +
                "</div>" +
                "</div>"
        },
        ajax: true,
        requestHandler: function (request) {
            request.sortItems = [];
            if (request.sort == null)
                return request;
            for (var property in request.sort) {
                if (request.sort.hasOwnProperty(property)) {
                    request.sortItems.push({ Field: property, Type: request.sort[property] });
                }
            }
            return request;
        },
        url: "/umbraco/Surface/Braintree/GetBootGridTransactions",
        formatters: {
            "dateTime": function (column, row) {
                return moment.utc(row.transactionDateTime).format('ddd DD MMM HH:mm');
            },
            "paymentInformation": function (column, row) {
                return row.cardType + " " + row.maskedNumber;
            },
            "amount": function (column, row) {
                return '£' + parseFloat(Math.round(row.amount * 100) / 100).toFixed(2); 
            },
            "actions": function (column, row) {
                return '<a href="#" class="link-view-transaction" data-transaction-id=' +
                    row.id +
                    '>View</a>';

            }
        }
    }).on("loaded.rs.jquery.bootgrid", function () {

        transactionsGrid.find(".link-view-transaction").on("click", function (e) {
            var transactionsId = $(this).data("transaction-id");
            event.preventDefault();

            $.ajax({
                url: '/umbraco/Surface/Braintree/ViewTransaction/' + transactionsId,
                success: function (data) {
                    onTransaction(data);
                }
            });
        });
    });
</script>

<div id="transaction"></div>

<script type="text/javascript">

    function onTransaction(data) {
        jQuery('#transaction').html(data);
        jQuery('#transaction').dialog({ 'title': 'Payment', 'width': 400, 'height': 300 });
    }

</script>
